{% extends "_layouts/cp" %}
{% set centered = true %}

{% set title = "Blueprint"|t %}


{% macro table3col(data, url) %}

    <table class="data fullwidth collapsible">
      <thead><tr class="head">
        <th scope="col">{{ "Name"|t }}</th>
        <th scope="col">{{ "Type"|t }}</th>
        <th scope="col">{{ "Handle"|t }}</th>
      </tr></thead>


      <tbody>

      {% for key, values in data | group('name') %}
        {% set l0 = 'l0-' ~ loop.index %}
        {% set first = values[0] %}
        <tr class="level0 tint {{ l0 }}">
          <th scope="row" width="25%"><a href="{{ url(url ~ first.id) }}">{{ key|t }}</a> <span class="items-num">{{ values|length }} {{ 'field(s)'|t }}</span></th>
          <td width="35%">
            {% if first.type is defined %}{{ first.type }}{% endif %}</td>
          <td width="40%">{% if first.handle is defined %}{{ first.handle }}{% endif %}</td>
        </tr>

        {% for field in values if field.fId %}
          <tr class="level1 compact fields" data-l0="{{ l0 }}">
              <td class="name"><a href="{{ url('settings/fields/edit/' ~ field.fId) }}">{{ field.fName }}</a> {% if field.fTranslatable %}<span class="translatable" title="{{ 'Translatable'|t }}">T</span> {% endif %}</td>
              <td>{{ field.fType }}</td>
              <td class="code handle">{{ field.fHandle }} <a href="#" class="find-field">&#8594;</a></td>
          </tr>
        {% endfor %}
      {% endfor %}

      </tbody>
    </table>

{% endmacro %}

{% import _self as macros %}


{% set sidebar %}
<h2>{{ 'Filter'|t }}</h2>
<input type="search" id="bp-search" placeholder="{{ 'Search'|t }}">

<nav class="bp-nav">
  <ul data-level="1">
    <li class="heading"><span>{{ 'Show'|t }}</span></li>
    <li><a href="#all" class="bp-showall"><span class="checkmark"><span class="mark"></span></span>{{ 'All'|t }}</a></li>
    <li><a href="#sections-structure"><span class="checkmark"><span class="mark"></span></span>{{ 'Structures'|t }}</a></li>
    <li><a href="#sections-channel"><span class="checkmark"><span class="mark"></span></span>{{ 'Channels'|t }}</a></li>
    <li><a href="#sections-single"><span class="checkmark"><span class="mark"></span></span>{{ 'Singles'|t }}</a></li>
    <li><a href="#globalsets"><span class="checkmark"><span class="mark"></span></span>{{ 'Global Sets'|t }}</a></li>
    <li><a href="#matrixfields"><span class="checkmark"><span class="mark"></span></span>{{ 'Matrix Fields'|t }}</a></li>
    <li><a href="#assetsources"><span class="checkmark"><span class="mark"></span></span>{{ 'Asset Sources'|t }}</a></li>
    <li><a href="#assettransforms"><span class="checkmark"><span class="mark"></span></span>{{ 'Asset Transforms'|t }}</a></li>
    <li><a href="#categorygroups"><span class="checkmark"><span class="mark"></span></span>{{ 'Category Groups'|t }}</a></li>
    <li><a href="#taggroups"><span class="checkmark"><span class="mark"></span></span>{{ 'Tag Groups'|t }}</a></li>
  </ul>
</nav>

<div class="small-info">
  Shift-Click: scroll to section<br>
  Alt-Click: show this/hide others
</div>

{% endset %}


{% set content %}

<div class="blueprint" id="all">

  <div id="sections">

      {% for sectionType, sections in bp.sections | group('type') %}

      <section id="sections-{{ sectionType }}">

      <h2>{{ 'Sections'|t }} / {{ sectionType }}s <span class="number"></span></h2>


      <table class="data fullwidth collapsible">
        <thead><tr class="head">
          <th scope="col" width="25%">{{ "Name"|t }}</th>
          <th scope="col" width="15%">{{ "Type"|t }}</th>
          <th scope="col" width="20%">{{ "Handle"|t }}</th>
          <th scope="col" width="40%">{{ "Twig Variable"|t }}</th>
        </tr></thead>

        <tbody>

        {% for sectionName, sectionsByName in sections | group('name') %}

        {% set l0 = 'l0-' ~ loop.index %}
        <tr class="level0 tint {{ l0 }}" data-l0="{{ l0 }}">
          <th scope="row"><a href="{{ url('settings/sections/' ~ sectionsByName[0].id) }}">{{ sectionName }}</a></th>
          <td class="capitalize">{{ sectionType }}</td>
          <td class="code">{{ sectionsByName[0].handle }}</td>
          <td> </td>
        </tr>

          {% for sectionEntryType, sectionsByEntryType in sectionsByName | group('etName') %}
            {% set l1 = l0 ~ '-l1-' ~ loop.index %}

            <tr class="level1 compact {{ l1 }}" data-l0="{{ l0 }}">
              <td class="name"><strong><a href="{{ url('settings/sections/' ~ sectionsByName[0].id ~ '/entrytypes/' ~ sectionsByEntryType[0].etId) }}">{{ sectionEntryType }}</a></strong> <span class="items-num">{{ sectionsByEntryType|length }} {{ 'field(s)'|t }}</span></td>
              <td>{{ 'EntryType'|t }}</td>
              <td class="code">{{ sectionsByEntryType[0].etHandle }}</td>
              <td> </td>
            </tr>

            {# {% for field in sectionsByEntryType %} #}
            {% for field in sectionsByEntryType if field.fId %}

              <tr class="level2 compact fields" data-l0="{{ l0 }}" data-l1="{{ l1 }}">
                  <td class="name">
                    <a href="{{ url('settings/fields/edit/' ~ field.fId) }}">{{ field.fName }}</a> {% if field.fTranslatable %}<span class="translatable" title="{{ 'Translatable'|t }}">T</span> {% endif %}
                  </td>

                  <td>
                    {{ field.fType }} {% if field.fType == 'Matrix' %} <a href="#mf{{ field.fId }}">&#8594;</a>{% endif %}

                  </td>

                  <td class="code handle">
                    {{ field.fHandle }} <a href="#" class="find-field">&#8594;</a>
                  </td>

                  <td class="code">
                    {{ field.handle }}.{{ field.fHandle }}
                  </td>

                </tr>

            {% endfor %}
          {% endfor %}
        {% endfor %}

      </tbody>
      </table>
    </section>

    {% endfor %}

</div>



<section id="globalsets">

  <h2>{{ 'Global Sets'|t }} <span class="number"></span></h2>

  <table class="data fullwidth collapsible">
    <thead><tr class="head">
      <th scope="col" width="25%">{{ "Name"|t }}</th>
      <th scope="col" width="15%">{{ "Type"|t }}</th>
      <th scope="col" width="20%">{{ "Handle"|t }}</th>
      <th scope="col" width="40%">{{ "Twig Variable"|t }}</th>
    </tr></thead>

    <tbody>

    {% for globalName, values in bp.globals | group('name') %}

      {% set l0 = 'l0-' ~ loop.index %}
      <tr class="parent level0 tint {{ l0 }}">
        <th scope="row"><a href="{{ url('settings/globals/' ~ values[0].id) }}">{{ globalName|t }}</a>  <span class="items-num">{{ values|length }} {{ 'field(s)'|t }}</span> </th>
        <td>{{ 'GlobalSet'|t }}</td>
        <td class="code"><strong>{{ values[0].handle }}</strong></td>
        <td> </td>
      </tr>

      {% for field in values if field.fId %}
        <tr class="child compact fields level1" data-l0="{{ l0 }}">
            <td class="name"><a href="{{ url('settings/fields/edit/' ~ field.fId) }}">{{ field.fName }}</a> {% if field.fTranslatable %}<span class="translatable" title="{{ 'Translatable'|t }}">T</span> {% endif %}</td>
            <td class="capitalize">{{ field.fType }}</td>
            <td class="code">{{ field.fHandle }} <a href="#" class="find-field">&#8594;</a></td>
            <td class="code handle">{{ values[0].handle }}.{{ field.fHandle }}</td>
        </tr>
      {% endfor %}

    {% endfor %}

    </tbody>
  </table>
</section>

<section id="matrixfields">

<h2>{{ 'Matrix Fields'|t }} <span class="number"></span></h2>

<table class="data fullwidth collapsible">
  <thead><tr class="head">
    <th scope="col" width="25%">{{ "Name"|t }}</th>
    <th scope="col" width="35%">{{ "Type"|t }}</th>
    <th scope="col" width="40%">{{ "Handle"|t }}</th>
  </tr></thead>

  <tbody>

  {% for mfName, mfsByParent in bp.matrixfields | group('parentName') %}

  {% set l0 = 'l0-' ~ loop.index %}

  <tr class="level0 tint {{ l0 }}">
    <th scope="row" id="mf{{ mfsByParent[0].parentId}}"><a href="{{ url('settings/fields/edit/' ~ mfsByParent[0].parentId) }}">{{ mfName }}</a></th>
    <td>{{ 'Matrix' }}</td>
    <td class="code">{{ mfsByParent[0].parentHandle }}</td>
  </tr>

    {% for mfEntryType, mfsByEntryType in mfsByParent  | group('name') %}

      {% set l1 = l0 ~ '-l1-' ~ loop.index %}


      <tr class="level1 compact {{ l1 }}" data-l0="{{ l0 }}">
        <td class="name">
          {% if mfsByEntryType[0].id %}
          <strong>{{ mfEntryType }}</strong> <span class="items-num">{{ mfsByEntryType|length }} {{ 'field(s)'|t }}</span>
          {% else %}
          <em>{{ 'No block type defined' }}</em>
          {% endif %}
          </td>
        <td>{{ 'MatrixBlockType'|t }}</td>
        <td class="code">{{ mfsByEntryType[0].handle }}</td>
      </tr>


      {% for field in mfsByEntryType if field.fId %}

        <tr class="compact fields level2" data-l0="{{ l0 }}" data-l1="{{ l1 }}">
            <td class="name">
              {{ field.fName }} {% if field.fTranslatable %}<span class="translatable" title="{{ 'Translatable'|t }}">T</span> {% endif %}
            </td>

            <td>
              {{ field.fType }}
            </td>

            <td class="code handle">
              {{ field.fHandle }} <a href="#" class="find-field">&#8594;</a>
            </td>

          </tr>

      {% endfor %}
    {% endfor %}
  {% endfor %}

</tbody>
</table>
</section>


<section id="assetsources">

  <h2>{{ 'Asset Sources'|t }} <span class="number"></span></h2>

  <table class="data fullwidth collapsible">
    <thead><tr class="head">
      <th scope="col" width="25%">{{ "Name"|t }}</th>
      <th scope="col" width="10%">{{ "Type"|t }}</th>
      <th scope="col" width="25%">{{ "Settings"|t }}</th>

      <th scope="col" width="40%">{{ "Handle"|t }}</th>
    </tr></thead>

    <tbody>


    {% for key, values in bp.assetsources | group('name') %}
      {% set l0 = 'l0-' ~ loop.index %}
      {% set first = values[0] %}

      <tr class="level0 tint {{ l0 }}">
        <th scope="row" ><a href="{{ url('settings/assets/sources/' ~ first.id) }}">{{ key|t }}</a> <span class="items-num">{{ values|length }} {{ 'field(s)'|t }}</span></th>
        <td>
          {% if first.type is defined %}{{ first.type }}{% endif %}</td>
        <td colspan="2" class="code">
          {% for k, v in first.decoded_settings %}
            <div><span class="key">{{ k }}:</span> {{ v}}</div>
          {% endfor %}
          </td>
        {# <td>{% if first.handle is defined %}{{ first.handle }}{% endif %}</td> #}
      </tr>

      {% for field in values if field.fId %}
        <tr class="level1 compact fields" data-l0="{{ l0 }}">
            <td class="name"><a href="{{ url('settings/fields/edit/' ~ field.fId) }}">{{ field.fName }}</a> {% if field.fTranslatable %}<span class="translatable" title="{{ 'Translatable'|t }}">T</span> {% endif %}</td>
            <td colspan="2">{{ field.fType }}</td>

            <td class="code handle">{{ field.fHandle }} <a href="#" class="find-field">&#8594;</a></td>
        </tr>
      {% endfor %}
    {% endfor %}


    </tbody>
  </table>
</section>


<section id="assettransforms">

  <h2>{{ 'Asset Transforms'|t }} <span class="number"></span></h2>

  <table class="data fullwidth collapsible">
    <thead><tr class="head">
      <th scope="col" width="25%">{{ "Name"|t }}</th>
      <th scope="col" width="10%">{{ "Type"|t }}</th>
      <th scope="col" width="10%">{{ "W × H"|t }}</th>
      <th scope="col" width="15%">{{ "Position"|t }}</th>

      <th scope="col" width="40%">{{ "Handle"|t }}</th>
    </tr></thead>

    <tbody>

    {% for transform in bp.assettransforms %}

      <tr class="level0 compact">
          <th class="name"><a href="{{ url('settings/assets/transforms/' ~ transform.handle) }}">{{ transform.name }}</a></th>
          <td class="capitalize">{{ transform.mode }}</td>
          <td>{{ transform.width }} × {{ transform.height }}</td>
          <td>{{ transform.position }}</td>
          <td class="code">{{ transform.handle }}</td>
      </tr>

    {% endfor %}

    </tbody>
  </table>
</section>


<section id="categorygroups">
  <h2>{{ 'Category Groups'|t }} <span class="number"></span></h2>
  {{ macros.table3col(bp.categorygroups, 'settings/categories/') }}
</section>

<section id="taggroups">
  <h2>{{ 'Tag Groups'|t }} <span class="number"></span></h2>
  {{ macros.table3col(bp.taggroups, 'settings/tags/') }}
</section>


</div>

{% endset %}


{% set myCss %}
    .blueprint .compact td, .blueprint .compact th { padding-top:1px !important; padding-bottom:1px !important; font-size: 90% }
    .blueprint .tint th, .blueprint .tint td { background-color: #fff;border-top: 1px solid gray !important;   }

    .blueprint .level0 a { color: #333f4d }
    .blueprint .level1 .name { padding-left: 20px !important }
    .blueprint .level2 .name { padding-left: 40px !important }

    .blueprint section {padding-top: 10px; margin-bottom: 0px; border-bottom: 2px solid lightgray}
    .blueprint h2 {text-transform:capitalize; font-size: 16px; color: #da5a47; margin-bottom:10px;}
    .blueprint .found td, .blueprint .found th { background-color: #ffa }
    .blueprint .capitalize {text-transform:capitalize}
    .blueprint table {margin-bottom: 30px;}

    .small-info {
      font-size: 85%;
      color: #222;
      padding: 5px;
      background:#ffa;
      margin:10px 0;
    }

    .blueprint .items-num {
      display: inline-block;
      background-color: lightgray;
      color: white;
      border-radius: 10px;
      padding: 0px 4px;
      text-align:center;
      font-size: 80%;
      min-width: 10px;
      font-weight: normal;

      display: none;
    }

    .blueprint .translatable {
      background-color: gray;
      color: white;
      border-radius: 4px;
      padding: 1px 4px;
      text-align:center;
      font-size: 70%;
      min-width: 10px;
      font-weight: bold;
    }

    .blueprint .key {
      background-color: lightgray;
      color: #444;
      border-radius: 3px;
      padding: 1px 4px;
      font-size: 80%;
      text-transform: uppercase;
    }


    .bp-nav .hidden-target { color: gray !important}

    .bp-nav .checkmark {
      display:block;
      float:left;
      width: 15px;
      margin-right:5px;
      background-color: #eee;
      background-colorx: rgb(0, 176, 7);

      border-radius: 10px;
      height: 10px;
      padding: 1px;
      border: 1px solid #ddd;

      box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 2px inset;
    }

    .bp-nav .mark {
      display:block;
      width: 10px;
      margin-right:5px;
      background-color:rgb(0, 176, 7);
      border-radius: 10px;
      height: 10px;
      margin-left:5px;

      -webkit-transition: all 0.05s;
      transition: all 0.05s;
    }

    .bp-nav .hidden-target .mark {
        margin-left:0;
        background-color: #aaa;
    }
{% endset %}
{% includeCss myCss %}


{% set js %}

    $(function() {

    // INIT from stored settings
    var hidden = [];
    try { hidden = JSON.parse(localStorage.getItem('bp.hidden'));} catch(e) {}
    $(".bp-nav a").each(function() {
      var target = $(this).attr('href');
      if ($.inArray(target, hidden) > -1) {
        $(this).addClass('hidden-target');
        if (target !='#all') { $(target).hide(); }
      }
    });

    // SHOW section, respond to click
    $(".bp-nav a").click(function (e) {
      // var target = '#' + $(this).data('key');
      e.preventDefault();
      var target = $(this).attr('href');

      // SHIFT-CLICK scroll to target
      if (e.shiftKey || e.metaKey) {

         $('html, body').animate({
            scrollTop: $(target).offset().top
        }, 300); // called on two elements, but works in FF and webkit

        return;
      }

      if (target == '#all') {
        $('.blueprint section').show();
        $('.bp-nav a').removeClass('hidden-target');
      }
      else {

        // ALT key is pressed - show this, hide others
        if (e.altKey) {
          $('.blueprint section').fadeOut('fast');
          $(target).fadeIn('fast');
          $('.bp-nav a').addClass('hidden-target');
          $(this).removeClass('hidden-target');
        }
        else {
          $(target).fadeToggle('fast');
          $(this).toggleClass('hidden-target');

          // change "all" too
          if ($(".bp-nav li:gt(1) a.hidden-target").length) {
            $('.bp-showall').addClass('hidden-target');
          }
          else {
            $('.bp-showall').removeClass('hidden-target');
          }
        }
      }

      // save current settings to localstorage
      var hidden = $('.bp-nav a.hidden-target').map( function (val,i) {
        return $(this).attr('href');
      }).get(); // use .get() to get array not $ objects
      try { localStorage.setItem('bp.hidden', JSON.stringify(hidden)); } catch (e) {}

    });

    // SEARCH field changed
    $('#bp-search').on('input', function() {
        filterTables($(this).val());
    });

    $('a.find-field').click(function (e) {
      e.preventDefault();
      var $this = $(this);
      $this.toggleClass('active');

      if ($this.hasClass('active')) {
        var find = 'h:' + $(this).parent().text().replace($(this).text(),'').trim();
      } else {
        var find = '';
      }

      $('#bp-search').val(find);
      filterTables(find);
    });




     // filter tables and try to show related parent rows
    function filterTables(find) {

      if (!find.length) {
        $('.blueprint tr, .blueprint table').removeClass('found').show();
        $('.blueprint .number').text('');
        return;
      }

      var textToFind = find.toLowerCase();
      var searchHandleOnly = false;
      if (textToFind.indexOf('h:') == 0) {
        textToFind = textToFind.substr(2);
        searchHandleOnly = true;
      }

      $('.blueprint tr').not('.head').each(function() {

        var searchableText = (searchHandleOnly) ? $(this).find('.handle').text().toLowerCase() : $(this).text().toLowerCase();
        if ( searchableText.indexOf(textToFind) == -1 ) {
          $(this).hide();
          $(this).removeClass('found');
        }
        else {
          $(this).show();
          $(this).addClass('found');
        }
      });

      // hide/show whole tables
      $('.blueprint table').each(function() {
        var numberOfFound = $(this).find('.found').length;
        if (!numberOfFound) {
          $(this).hide();
        }
        else {
          $(this).show();
        }

        $(this).parent().find('h2 .number').text('('+numberOfFound+')');

      });

      // show parent table rows, if they exists
      //var visible = $('.blueprint tr').filter(':visible');
      var visible = $('.blueprint tr.found');
      visible.each(function() {

        if ($(this).data('l0')) {
          var l0 = '.' + $(this).data('l0');
          $(this).siblings(l0).show();
        }

        if ($(this).data('l1')) {
          var l1 = '.' + $(this).data('l1');
          $(this).siblings(l1).show();
        }
      });

    }


  });

{% endset %}
{% includeJs js %}
